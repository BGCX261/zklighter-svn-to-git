<?xml version="1.0" encoding="UTF-8"?>
<?taglib uri="http://www.zkoss.org/dsp/web/core" prefix="c" ?>
<?page language="xul/html"?>
<!--
fileuploaddlg.zul

	Purpose:
		The fileupload modal dialog
	Description:

	History:
		Tue Jul 19 12:06:22     2005, Created by tomyeh

Copyright (C) 2005 Potix Corporation. All Rights Reserved.

{{IS_RIGHT
	This program is distributed under LGPL Version 3.0 in the hope that
	it will be useful, but WITHOUT ANY WARRANTY.
}}IS_RIGHT
-->
<window title="${arg.title}" shadow="false" border="normal" width="360px" closable="true"
use="org.zkoss.zul.impl.FileuploadDlg" xmlns:w="http://www.zkoss.org/2005/zk/client"
	w:onClose="this.cancel()">
	<attribute w:name="cancel">
		function (sendToServer) {
			var fu = this.$f('fileupload');
			if (fu) {
				fu._uplder.destroy();
				if (sendToServer) {
					zAu.send(new zk.Event(this, 'onClose'));
					this.detach();
				}
			}
		}
	</attribute>
	<attribute w:name="submit">
		function () {
			this.cancel();
			zAu.send(new zk.Event(this, 'onClose', true));
			this.detach();
		}
	</attribute>
	<script><![CDATA[
if (!zk.ModalFileViewer) {
	zk.ModalFileViewer = zk.$extends(zk.Object, {
		updated: null,
		$init: function (uplder,  filenm) {
			this._uplder = uplder;
			filenm = filenm.replace(/\//g, '\\');
			filenm = filenm.substring(filenm.lastIndexOf('\\') + 1, filenm.length);
			
			var id = uplder.id,
				self = this,
				wgt = uplder.getWidget(),
				uploaded = wgt.$f('uploaded'),
				uri = zk.ajaxURI('/web/zk/img/progress2.gif', {au:true}),
				html = '<div id="' + id + '" style="min-height:16px;background:#F4F8FF;border: 1px solid #99AABD;font-family:'
				+ 'arial,sans-serif;font-size: 11px;padding: 2px;'
				+ 'color: #0F3B82;"><image style="float: left;" src="' + uri + '"/>'
				+ '<div id="' + id + '-cnt"><a id="' + id + '-cancel" style="float: left;padding-left: 2px; color: #0366AC;'
				+ ' font-weight: bold;cursor: pointer;">' + msgzul.UPLOAD_CANCEL + ' </a>&nbsp;&nbsp;&nbsp;' + filenm
				+ '</div><div style="padding-left: 24px">'
				+ msgzk.FILE_SIZE + '&nbsp;&nbsp;<span id="' + id + '-sent">0</span> of '
				+ '<span id="' + id + '-total">0</span></div></div>';
			
			uploaded.setVisible(true);
			jq(uploaded).append(html);

			this.max = ${empty arg.max? 0: arg.max};
			if (this.max > 0 && this.max <= uploaded.$n().childNodes.length)
				uploaded.$f("fileupload").setVisible(false);
				
				
			this.viewer = jq('#'+ id)[0];
			jq('#' + id + '-cancel').click(function() {
				wgt.$f('submit').revert();
				if (!self._finish) uplder.cancel();
				else {
					var $n = jq('#' + id),
						index = $n.parent().children().index($n[0]);
					zAu.send(new zk.Event(wgt.$o(), "onRemove", index));
					jq(self.viewer).remove();
				}
				
				if (self.max > 0 && self.max > uploaded.$n().childNodes.length)
					uploaded.$f("fileupload").setVisible(true);
			});
		},
		update: function (sent, total) {
			jq('#'+ this._uplder.id + '-sent').html(Math.round((total/1024)*sent/100) + msgzk.KBYTES);
			if (!this.updated) {
				this.updated = true;
				jq('#'+ this._uplder.id + '-total').html(Math.round(total/1024)+msgzk.KBYTES);
			}
		},
		destroy: function (finish) {
			if (this._finish) return;
			this._finish = finish;
			if (!finish) jq(this.viewer).remove();
			else {
				jq('#' + this._uplder.id + '-sent').parent().remove();
				jq('#' + this._uplder.id)[0].firstChild.src = zk.ajaxURI('/web/zk/img/attachment.gif', {au:true});
			}
		}
	});
}
]]></script>
	<label value="${arg.message}"/>	
	<fileupload id="fileupload" forward="onUpload=" label="${c:l('mesg:org.zkoss.zul.mesg.MZul:UPLOAD_BROWSE')}"
		upload="zk.ModalFileViewer,maxsize=${arg.maxsize}${arg.native ? ',native':''}"/>
	<separator bar="true"/>
	<div id="uploaded" visible="false"></div>
	<div id="btns"><button id="submit" label="${c:l('mesg:org.zkoss.zul.mesg.MZul:UPLOAD_SUBMIT')}">
		<attribute w:name="onClick">
			var f = this.$f('fileupload'),
				self = this;
			function t() {
				if (zul.Upload.isFinish(f)) {
					self.$o().submit();
					clearInterval(self._tmp);
					self._tmp = undefined;
					return true;
				}
			}
			if (t()) return;
			self._tmp = setInterval(t, 800);
			this.setDisabled(true);
			this.nextSibling.setDisabled(true);
			if (zk.ie)
				this.$f('btns').rerender();
		</attribute>
		<attribute w:name="revert">
			function () {	
				clearInterval(this._tmp);
				this._tmp = undefined;
				this.setDisabled(false);
				this.nextSibling.setDisabled(false);
				if (zk.ie)
					this.$f('btns').rerender();
			}
		</attribute>
	</button>
	<button label="${c:l('mesg:org.zkoss.zul.mesg.MZul:UPLOAD_CANCEL')}" w:onClick="this.$o().cancel(true)"/>
	</div>
</window>
